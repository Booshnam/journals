{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Styles","styled","div","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","React","useState","value","setValue","onChange","useAsyncDebounce","undefined","class","e","target","placeholder","style","fontSize","border","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","SelectColumnFilter","id","options","useMemo","Set","forEach","row","add","values","map","option","i","defaultPropGetter","Table","columns","data","getHeaderProps","getColumnProps","getRowProps","getCellProps","filterTypes","text","rows","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","minWidth","width","maxWidth","Filter","useTable","initialState","pageIndex","useFilters","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","state","visibleColumns","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","headerGroup","getHeaderGroupProps","headers","className","render","canFilter","colSpan","height","textAlign","cells","cell","colspan","onClick","disabled","type","defaultValue","Number","ranking","scopus","App","Header","accessor","Cell","require","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64fc3a3c.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce, usePagination} from 'react-table'\r\n\r\nconst Styles = styled.div`\r\n  .table {\r\n    table-layout:fixed;\r\n  }\r\n\r\n  i {\r\n    font-size: 1rem !important;\r\n  }\r\n\r\n  .table tr {\r\n    border-radius: 20px;\r\n  }\r\n\r\n  tr td:nth-child(n+4),\r\n  tr th:nth-child(n+4) {\r\n    border-radius: 0 .625rem .625rem 0;\r\n  }\r\n\r\n  tr td:nth-child(1),\r\n  tr th:nth-child(1) {\r\n    border-radius: .625rem 0 0 .625rem;\r\n  }\r\n\r\n  tr td:nth-child(n+5), {\r\n    textAlign: 'center'\r\n  }\r\n\r\n  td[colspan]:not([colspan=\"1\"]) {\r\n    text-align: center;\r\n  }\r\n\r\n  .title {\r\n    width: 450px;\r\n    height: 60px;\r\n    padding-left: 0.75rem;\r\n    padding-right: 0.75rem;\r\n  }\r\n\r\n  .publisher {\r\n    width: 450px;\r\n    height: 60px;\r\n    padding-left: 0.75rem;\r\n    padding-right: 0.75rem;\r\n  }\r\n\r\n  .ranking {\r\n    maxWidth: 5px;\r\n    height: 60px;\r\n    padding: 0.75rem;\r\n    text-align: center;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .scopus {\r\n    maxWidth: 5px;\r\n    height: 60px;\r\n    padding: 0.75rem;\r\n    text-align: center;\r\n  }\r\n\r\n`\r\n\r\n// Define a default UI for filtering\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const count = preGlobalFilteredRows.length\r\n  const [value, setValue] = React.useState(globalFilter)\r\n  const onChange = useAsyncDebounce(value => {\r\n    setGlobalFilter(value || undefined)\r\n  }, 200)\r\n\r\n  return (\r\n    <span>\r\n      Search:{' '}\r\n      <input\r\n        class=\"border border-gray-800 focus:border-blue-500 rounded w-full py-2 px-3 mr-4 text-black\"\r\n        value={value || \"\"}\r\n        onChange={e => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`${count} records...`}\r\n        style={{\r\n          fontSize: '1.1rem',\r\n          border: '0',\r\n        }}\r\n      />\r\n    </span>\r\n  )\r\n}\r\n\r\n// Define a default UI for filtering\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <div class=\"relative inline-block w-full text-blue-700\">\r\n    <input\r\n      class=\"border border-gray-800 focus:border-blue-500 rounded w-full py-2 px-3 mr-4 text-black\"\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n    />\r\n    </div>\r\n  )\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nfunction SelectColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the options for filtering\r\n  // using the preFilteredRows\r\n  const options = React.useMemo(() => {\r\n    const options = new Set()\r\n    preFilteredRows.forEach(row => {\r\n      options.add(row.values[id])\r\n    })\r\n    return [...options.values()]\r\n  }, [id, preFilteredRows])\r\n\r\n  // Render a multi-select box\r\n  return (\r\n    <div class=\"relative inline-block w-full text-blue-700\">\r\n    <select\r\n      class=\"bg-blue-50 hover:bg-blue-100 text-blue-800 py-1 px-4 border border-blue-400 rounded shadow\"\r\n      value={filterValue}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined)\r\n      }}\r\n    >\r\n      <option value=\"\">All</option>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst defaultPropGetter = () => ({})\r\n\r\n// Our table component\r\nfunction Table({ columns, data, getHeaderProps = defaultPropGetter,\r\n  getColumnProps = defaultPropGetter,\r\n  getRowProps = defaultPropGetter,\r\n  getCellProps = defaultPropGetter }) {\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      minWidth: 5,\r\n      width: 150,\r\n      maxWidth: 400,\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    state,\r\n    visibleColumns,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,    \r\n    state: { pageIndex },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    useFilters, // useFilters!\r\n    useGlobalFilter, // useGlobalFilter!\r\n    usePagination\r\n  )\r\n\r\n  return (\r\n    <div class=\"flex items-start justify-center min-h-screen bg-gray-900\">\r\n    <div class=\"col-span-12\">\r\n    <div class=\"text-indigo-500 text-center text-5xl font-bold py-8\">Journals</div>\r\n    <div class=\"overflow-auto lg:overflow-visible \">\r\n      <table class=\"table-fixed table text-gray-400 border-separate space-y-6 text-sm min-h-full max-h-full \" {...getTableProps()}>\r\n        <thead class=\"my-12 bg-gray-800 text-gray-500\">\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th class=\"p-3 \" {...column.getHeaderProps([\r\n                  {\r\n                    className: column.className,\r\n                    style: column.style,\r\n                  },\r\n                  getColumnProps(column),\r\n                  getHeaderProps(column),\r\n                  ])}>\r\n                  {column.render('Header')}\r\n                  {/* Render the columns filter UI */}\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <th class=\"p-3\"\r\n              colSpan={visibleColumns.length}\r\n              style={{\r\n                width: '200px',height: '60px',\r\n                textAlign: 'left',\r\n              }}\r\n            >\r\n              <GlobalFilter\r\n                preGlobalFilteredRows={preGlobalFilteredRows}\r\n                globalFilter={state.globalFilter}\r\n                setGlobalFilter={setGlobalFilter}\r\n              />\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <div></div>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr class=\"bg-gray-800\" {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td class=\"p-3\" {...cell.getCellProps([\r\n                      {\r\n                        className: cell.column.className,\r\n                        style: cell.column.style,\r\n                      },\r\n                      getColumnProps(cell.column),\r\n                      getCellProps(cell),\r\n                    ])}>{cell.render('Cell')}</td>\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        \r\n      \r\n      <tr>\r\n      <td colspan=\"4\" class=\"\">\r\n      <div class=\"p-3 justify-center\">\r\n        <button class=\"border border-teal-500 text-teal-500 rounded-sm font-semibold py-1 px-4 hover:bg-teal-500 hover:text-white disabled:opacity-50\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </button>{' '}\r\n        <button class=\"border border-teal-500 text-teal-500 rounded-sm font-semibold py-1 px-4 hover:bg-teal-500 hover:text-white disabled:opacity-50\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </button>{' '}\r\n        <button class=\"border border-teal-500 text-teal-500 rounded-sm font-semibold py-1 px-4 hover:bg-teal-500 hover:text-white disabled:opacity-50\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </button>{' '}\r\n        <button class=\"border border-teal-500 text-teal-500 rounded-sm font-semibold py-1 px-4 hover:bg-teal-500 hover:text-white disabled:opacity-50\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </button>{' '}\r\n        <span>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span>\r\n          <span class=\"\">\r\n            | Go to page:{' '}\r\n            <input\r\n              class=\"border border-gray-800 focus:border-blue-500 rounded w-full py-1 px-3 mr-4 text-black\"\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={e => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                gotoPage(page)\r\n              }}\r\n              style={{ width: '100px' }}\r\n            />\r\n          </span>{' '}\r\n        </span>\r\n      </div>\r\n      </td>\r\n      </tr>\r\n      </tbody>\r\n      </table>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ranking({ value}) {\r\n  return <div class={value === 'A*' ? 'text-green-500' : (value === 'A' ? 'text-yellow-300' : (value === 'B' ? 'text-yellow-600' : 'text-red-800'))}> {value} </div>\r\n}\r\n\r\nfunction scopus({ value}) {\r\n  return <div class={value === 'True' ? 'text-green-400' : 'text-red-400'}> {value} </div>\r\n}\r\n\r\nfunction App() {\r\n  const columns = React.useMemo(\r\n    () => [\r\n          {\r\n            Header: 'Title',\r\n            accessor: 'Title',\r\n            className:'title',\r\n          },\r\n          {\r\n            Header: 'Publisher',\r\n            accessor: 'Publisher',\r\n            className:'publisher',\r\n          },        \r\n          {\r\n            Header: 'ABDC Ranking',\r\n            accessor: 'ABDC ranking',\r\n            Filter: SelectColumnFilter,\r\n            filter: 'equals',\r\n            className: 'ranking',\r\n            Cell: ranking,\r\n          },\r\n          {\r\n            Header: 'Scopus listed',\r\n            accessor: 'scopus',\r\n            Filter: SelectColumnFilter,\r\n            filter: 'includes',\r\n            className: 'scopus',\r\n            Cell: scopus,\r\n          }\r\n    ],\r\n    []\r\n  )\r\n\r\n  const data = React.useMemo(() => require('./data.json'), [])\r\n\r\n  return (\r\n    <Styles>\r\n      <Table\r\n        columns={columns}\r\n        data={data}\r\n      />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}